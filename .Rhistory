select(-starts_with("kurtosis"))
select(-starts_with("amplitude"))
select(-starts_with("var"))
select(-starts_with("stddev"))
pmltrain2 <- pmltrain %>%
select(-starts_with("gyros")) %>%
select(-starts_with("magnet")) %>%
select(-starts_with("mean")) %>%
select(-starts_with("max")) %>%
select(-starts_with("skewness")) %>%
select(-starts_with("kurtosis")) %>%
select(-starts_with("amplitude")) %>%
select(-starts_with("var")) %>%
select(-starts_with("stddev")) %>%
pmltrain2 <- pmltrain %>%
select(-starts_with("gyros")) %>%
select(-starts_with("magnet")) %>%
select(-starts_with("mean")) %>%
select(-starts_with("max")) %>%
select(-starts_with("skewness")) %>%
select(-starts_with("kurtosis")) %>%
select(-starts_with("amplitude")) %>%
select(-starts_with("var")) %>%
select(-starts_with("stddev"))
pmltrain2 <- pmltrain %>%
select(-starts_with("gyros")) %>%
select(-starts_with("magnet")) %>%
select(-starts_with("mean")) %>%
select(-starts_with("min")) %>%
select(-starts_with("max")) %>%
select(-starts_with("skewness")) %>%
select(-starts_with("kurtosis")) %>%
select(-starts_with("amplitude")) %>%
select(-starts_with("var")) %>%
select(-starts_with("stddev")) %>%
select(-starts_with("avg"))
select(-starts_with("accel"))
pmltrain2 <- pmltrain %>%
select(-starts_with("gyros")) %>%
select(-starts_with("magnet")) %>%
select(-starts_with("mean")) %>%
select(-starts_with("min")) %>%
select(-starts_with("max")) %>%
select(-starts_with("skewness")) %>%
select(-starts_with("kurtosis")) %>%
select(-starts_with("amplitude")) %>%
select(-starts_with("var")) %>%
select(-starts_with("stddev")) %>%
select(-starts_with("avg")) %>%
select(-starts_with("accel"))
pmltrain2 <- pmltrain %>%
select(-starts_with("gyros")) %>%
select(-starts_with("magnet")) %>%
select(-starts_with("mean")) %>%
select(-starts_with("min")) %>%
select(-starts_with("max")) %>%
select(-starts_with("skewness")) %>%
select(-starts_with("kurtosis")) %>%
select(-starts_with("amplitude")) %>%
select(-starts_with("var")) %>%
select(-starts_with("stddev")) %>%
select(-starts_with("avg")) %>%
select(-starts_with("accel")) %>%
select(-starts_with("raw"))
pmltrain2 <- pmltrain %>%
select(-starts_with("X")) %>%
select(-starts_with("gyros")) %>%
select(-starts_with("magnet")) %>%
select(-starts_with("mean")) %>%
select(-starts_with("min")) %>%
select(-starts_with("max")) %>%
select(-starts_with("skewness")) %>%
select(-starts_with("kurtosis")) %>%
select(-starts_with("amplitude")) %>%
select(-starts_with("var")) %>%
select(-starts_with("stddev")) %>%
select(-starts_with("avg")) %>%
select(-starts_with("accel")) %>%
select(-starts_with("raw"))
pairs(x=pmltrain[,c("new_window","num_window", "total_accel_arm","total_accel_arm","total_accel_dumbbell","total_accel_forearm")],y=pmltrain$classe,col=pmltrain$classe)
pairs(x=pmltrain[,c("new_window","num_window", "total_accel_arm","total_accel_arm","total_accel_dumbbell","total_accel_forearm")],col=pmltrain$classe)
modelFit <- train(classe~.,data=pmltrain2,method="binomial")
modelFit <- train(classe~.,data=pmltrain2,method="glm")
mod.disc <- lda(classe~.,pmltrain2)
library(leaps)
mod.disc <- lda(classe~.,pmltrain2)
?lda
library(MASS)
mod.disc <- lda(classe~.,pmltrain2)
plot(mod.disc)
summary(mod.disc)
modelsub <-regsubsets(classe~.,pmltrain2)
summary(modelsub)
library(glmnet)
install.packages("glmnet")
library(glmnet)
x <- model.matrix(classe~-1,data=pmltrain2)
x <- model.matrix(classe~.-1,data=pmltrain2)
fit.ridge <- glmnet(x,pmltrain2$classe,alpha=0)
plot(fit.ridge,xvar="lambda",label=TRUE)
library(ggplot2)
library(dplyr)
library(knitr)
library(caret)
library(leaps)
library(MASS)
library(glmnet)
pmltrain <- read.csv("pmltraining.csv")
pmltrain <- read.csv("pmltraining.csv")
pmltest <- read.csv("pmltesting.csv")
pmltrain2 <- pmltrain %>%
select(-starts_with("X")) %>%
select(-starts_with("gyros")) %>%
select(-starts_with("magnet")) %>%
select(-starts_with("mean")) %>%
select(-starts_with("min")) %>%
select(-starts_with("max")) %>%
select(-starts_with("skewness")) %>%
select(-starts_with("kurtosis")) %>%
select(-starts_with("amplitude")) %>%
select(-starts_with("var")) %>%
select(-starts_with("stddev")) %>%
select(-starts_with("avg")) %>%
select(-starts_with("accel")) %>%
select(-starts_with("raw"))
pmltrain2 <- pmltrain %>%
select(-starts_with("gyros")) %>%
select(-starts_with("magnet")) %>%
select(-starts_with("mean")) %>%
select(-starts_with("min")) %>%
select(-starts_with("max")) %>%
select(-starts_with("skewness")) %>%
select(-starts_with("kurtosis")) %>%
select(-starts_with("amplitude")) %>%
select(-starts_with("var")) %>%
select(-starts_with("stddev")) %>%
select(-starts_with("avg")) %>%
select(-starts_with("accel")) %>%
select(-starts_with("raw"))
pmltrain2 <- pmltrain %>%
select(-starts_with("X")) %>%
select(-starts_with("gyro")) %>%
select(-starts_with("magnet")) %>%
select(-starts_with("mean")) %>%
select(-starts_with("min")) %>%
select(-starts_with("max")) %>%
select(-starts_with("skewness")) %>%
select(-starts_with("kurtosis")) %>%
select(-starts_with("amplitude")) %>%
select(-starts_with("var")) %>%
select(-starts_with("stddev")) %>%
select(-starts_with("avg")) %>%
select(-starts_with("accel")) %>%
select(-starts_with("raw"))
pmltrain2 <- pmltrain %>%
select(-starts_with("X")) %>%
select(-starts_with("gyros")) %>%
select(-starts_with("magnet")) %>%
select(-starts_with("mean")) %>%
select(-starts_with("min")) %>%
select(-starts_with("max")) %>%
select(-starts_with("skewness")) %>%
select(-starts_with("kurtosis")) %>%
select(-starts_with("amplitude")) %>%
select(-starts_with("var")) %>%
select(-starts_with("stddev")) %>%
select(-starts_with("avg")) %>%
select(-starts_with("accel")) %>%
select(-starts_with("raw"))
pmltrain2 <- pmltrain %>%
select(-starts_with("gyros")) %>%
select(-starts_with("magnet")) %>%
select(-starts_with("mean")) %>%
select(-starts_with("min")) %>%
select(-starts_with("max")) %>%
select(-starts_with("skewness")) %>%
select(-starts_with("kurtosis")) %>%
select(-starts_with("amplitude")) %>%
select(-starts_with("var")) %>%
select(-starts_with("stddev")) %>%
select(-starts_with("avg")) %>%
select(-starts_with("accel")) %>%
select(-starts_with("raw"))
pmltrain2 <- pmltrain %>%
select(-starts_with("X"))
rm(MASS)
pmltrain2 <- pmltrain %>%
dplyr::select(-starts_with("X")) %>%
select(-starts_with("gyros")) %>%
select(-starts_with("magnet")) %>%
select(-starts_with("mean")) %>%
select(-starts_with("min")) %>%
select(-starts_with("max")) %>%
select(-starts_with("skewness")) %>%
select(-starts_with("kurtosis")) %>%
select(-starts_with("amplitude")) %>%
select(-starts_with("var")) %>%
select(-starts_with("stddev")) %>%
select(-starts_with("avg")) %>%
select(-starts_with("accel")) %>%
select(-starts_with("raw"))
pmltrain2 <- pmltrain %>%
dplyr::select(-starts_with("X")) %>%
dplyr::select(-starts_with("gyros")) %>%
select(-starts_with("magnet")) %>%
select(-starts_with("mean")) %>%
select(-starts_with("min")) %>%
select(-starts_with("max")) %>%
select(-starts_with("skewness")) %>%
select(-starts_with("kurtosis")) %>%
select(-starts_with("amplitude")) %>%
select(-starts_with("var")) %>%
select(-starts_with("stddev")) %>%
select(-starts_with("avg")) %>%
select(-starts_with("accel")) %>%
select(-starts_with("raw"))
pmltrain2 <- pmltrain %>%
dplyr::select(-starts_with("X")) %>%
dplyr::select(-starts_with("gyros")) %>%
dplyr::select(-starts_with("magnet")) %>%
dplyr::select(-starts_with("mean")) %>%
dplyr::select(-starts_with("min")) %>%
dplyr::select(-starts_with("max")) %>%
dplyr::select(-starts_with("skewness")) %>%
dplyr::select(-starts_with("kurtosis")) %>%
dplyr::select(-starts_with("amplitude")) %>%
dplyr::select(-starts_with("var")) %>%
dplyr::select(-starts_with("stddev")) %>%
dplyr::select(-starts_with("avg")) %>%
dplyr::select(-starts_with("accel")) %>%
dplyr::select(-starts_with("raw"))
pairs(x=pmltrain[,c("new_window","num_window", "total_accel_arm","total_accel_arm","total_accel_dumbbell","total_accel_forearm")],y=pmltrain$classe,col=pmltrain$classe)
View(pmltrain2)
featurePlot(x = pmltrain2[, 1:20],
y = pmltrain2$classe,
plot = "pairs")
featurePlot(x = pmltrain2[, 1:8],
y = pmltrain2$classe,
plot = "pairs")
pmltrain2 <- pmltrain %>%
dplyr::select(-starts_with("X")) %>%
dplyr::select(-starts_with("cvtd"))
pmltrain2 <- pmltrain %>%
dplyr::select(-starts_with("X")) %>%
dplyr::select(-starts_with("cvtd"))
pmltrain2 <- pmltrain %>%
dplyr::select(-starts_with("X")) %>%
dplyr::select(-starts_with("cvtd")) %>%
dplyr::select(-starts_with("gyros")) %>%
dplyr::select(-starts_with("magnet")) %>%
dplyr::select(-starts_with("mean")) %>%
dplyr::select(-starts_with("min")) %>%
dplyr::select(-starts_with("max")) %>%
dplyr::select(-starts_with("skewness")) %>%
dplyr::select(-starts_with("kurtosis")) %>%
dplyr::select(-starts_with("amplitude")) %>%
dplyr::select(-starts_with("var")) %>%
dplyr::select(-starts_with("stddev")) %>%
dplyr::select(-starts_with("avg")) %>%
dplyr::select(-starts_with("accel")) %>%
dplyr::select(-starts_with("raw"))
featurePlot(x = pmltrain2[, 1:7],
y = pmltrain2$classe,
plot = "pairs",
auto.key = list(columns = 5))
plot(x = pmltrain2[, 1:7],y = pmltrain2$classe,)
plot(x = pmltrain2[, 1:7],y = pmltrain2$classe)
pmltrain2[, 1:7]
plot(x = pmltrain2[, 1:7],y = pmltrain2$classe)
featurePlot(x = pmltrain2[, 3:7],
y = pmltrain2$classe,
plot = "pairs",
auto.key = list(columns = 5))
plot(x = pmltrain2[, 3:7],y = pmltrain2$classe)
descrCor <-  cor(pmltrain2)
descrCor <-  cor(pmltrain2)[, 3:7]
descrCor <-  cor(pmltrain2)[, 3:6]
pmltrain2$total_accel_arm <- as.numeric(pmltrain2$total_accel_arm)
pmltrain2$total_accel_belt <- as.numeric(pmltrain2$total_accel_arm)
pmltrain2$total_accel_arm <- as.numeric(pmltrain2$total_accel_arm)
pmltrain2$total_accel_dumbbell <- as.numeric(pmltrain2$total_accel_arm)
pmltrain2$total_accel_forearm <- as.numeric(pmltrain2$total_accel_arm)
descrCor <-  cor(pmltrain2)[, 3:6]
pmltrain2$num_window <- as.factor(pmltrain2$num_window)
pmltrain2$num_window <- as.numeric(pmltrain2$num_window)
descrCor <-  cor(pmltrain2)[, 1:7]
descrCor <-  cor(pmltrain2)[, 3:7]
str(pmltrain2)
descrCor <-  cor(pmltrain2[, 3:7])
summary(descrCor)
View(descrCor)
descrCor <-  cor(pmltrain2[, 1:7])
modelFit <- train(classe~.,data=pmltrain2,method="glm")
install.packages('e1071', dependencies=TRUE)
install.packages('caret', dependencies = TRUE)
install.packages("caret", dependencies = TRUE)
modelFit <- train(classe~.,data=pmltrain2,method="glm")
library(caret)
modelFit <- train(classe~.,data=pmltrain2,method="glm")
descrCor <-  cor(pmltrain2[, 3:20])
descrCor <-  cor(pmltrain2[, 3:19])
descrCor
round(descrCor,2)
view(round(descrCor,2))
print(round(descrCor,2))
highlyCorDescr <- findCorrelation(descrCor, cutoff = .75)
highlyCorDescr
pmltrain2[,highlyCorDescr]
pmltrain2[1,highlyCorDescr]
pmltrain2[0,highlyCorDescr]
featurePlot(x = pmltrain2[, 3:7],
y = pmltrain2$classe,
plot = "pairs",
auto.key = list(columns = 5))
featurePlot(x = pmltrain2[, 3:7],
y = pmltrain2$classe,
plot = "pairs",
auto.key = list(columns = 5))
featurePlot(x = pmltrain2$user_name,
+             y = pmltrain2$classe,
+             plot = "box",
+             auto.key = list(columns = 5))
featurePlot(x = pmltrain2$user_name,
y = pmltrain2$classe,
plot = "box",
auto.key = list(columns = 5))
featurePlot(x = pmltrain2$user_name,
y = pmltrain2$classe,
plot = "box")
g <- ggplot(pmltrain,aes(user_name))
g+geom_bar(aes(fill=classe))
modelFit <- train(classe~.,data=pmltrain2,method="glm")
warnings()
modelFit <- train(classe~.,data=pmltrain2,method="glmnet")
summary(pmltrain2)
table(pmltrain2$new_window)
nearZeroVar(pmltrain,saveMetrics = TRUE)
nsv <- nearZeroVar(pmltrain,saveMetrics = TRUE)
nsv[,nsv$nzv==TRUE]
nsv[nsv$nsv==TRUE,]
nsv[,nsv$nsv==TRUE]
nsv[,nsv$nzv==TRUE]
nsv[nsv$nzv==TRUE,]
preObj<- preProcess(pmltrain2)''
preObj<- preProcess(pmltrain2)
preObj<- preProcess(pmltrain)
preObj
preProc <- preProcess(log10(pmltrain[,-160]+1,method="pca",pcaComp=2))
preProc <- preProcess(pmltrain,method="pca",pcaComp=2))
preProc <- preProcess(pmltrain,method="pca",pcaComp=2)
preProc
preProc$rotation
preProc$dim
preProc$knnSummary()
?train
modall<- train(class~.,pmltrain,method="nnet")
modall<- train(class~.,pmltrain,method="nnet",na.omit=TRUE)
modall<- train(class~.,pmltrain,method="nnet",na.action=na.omit)
modall<- train(class~.,pmltrain2,method="nnet",na.action=na.omit)
modall<- train(class~.,pmltrain2,method="nnet")
modall<- train(class~.,pmltrain2,method="nnet",na.action=na.fail)
modall<- train(class~.,pmltrain2,method="knn",prePRocess="center","scale")
modall<- train(class~.,pmltrain2,method="knn",preProcess="center","scale")
modall<- train(classe~.,pmltrain2,method="knn",preProcess="center","scale")
summary(modall)
library(AppliedPredictiveModeling)
data(segmentationOriginal)
library(caret)
inTrain <- createDataPartition(segment$case,p=0.8,list=FALSE)
inTrain <- createDataPartition(segmentationOriginal$case,p=0.8,list=FALSE)
set.seed(125)
inTrain <- createDataPartition(segmentationOriginal$case,p=0.8,list=FALSE)
inTrain <- createDataPartition(segmentationOriginal$Case,p=0.8,list=FALSE)
segTrain <- segmentationOriginal[inTrain,]
segTest <- segmentationOriginal[-inTrain,]
model1 <- train(Case~.,data=segTrain,method="rpart")
predicta <- predict(model1,c("TotalIntench2" = 23,000, "FiberWidthCh1" = 10, "PerimStatusCh1"=2))
predict1 <- predict(model1,segTest)
predict1
summary(model1)
finalmodel <- model1$finalModel
summary(finalmodel)
plot(finalmodel)
segTest[segTest$TotalIntenCh2==23000,]
View(segTest)
segTest[segTest$TotalIntenCh2==23000,]
range(segTest$TotalIntenCh2)
range(segTest$FiberWidthCh1)
range(segTest$VarIntenCh4)
range(segTest$PerimStatusCh1)
predict1 <- predict(model1,newdata=segTest)
model1 <- train(Class~.,data=segTrain,method="rpart")
finalmodel <- model1$finalModel
summary(finalmodel)
predict1 <- predict(finalmodel,segTest)
predict1 <- predict(model1,segTest)
predict1
?predict.list
extractPrediction(model1,testX = c(TotalIntench2==50000))
new.set <- data.frame(TotalIntench=c(23000,50000,57000,NA))
View(new.set)
new.set <- data.frame(TotalIntench=c(23000,50000,57000,NA),FiberWidthCh1=c(10,10,8,1))
new.set <- data.frame(TotalIntench=c(23000,50000,57000,NA),FiberWidthCh1=c(10,10,8,1),PerimStatusCh1=c(2,NA,NA,2))
new.set <- data.frame(TotalIntench=c(23000,50000,57000,NA),FiberWidthCh1=c(10,10,8,1),PerimStatusCh1=c(2,NA,NA,2),VarIntenCh4=c(NA,100,100,100))
predict1 <- predict(model1,new.set)
model1$finalModel
library(rpart.plot)
install.packages("rpart.plot")
library(rpart.plot)
fancyRpartPlot(model1$finalModel)
fancyRpartPlot(model1$finalModel)
suppressMessages(library(rattle))
install.packages("rattle")
suppressMessages(library(rattle))
fancyRpartPlot(model1$finalModel)
plot(model1$finalModel)
install.packages("rpart")
install.packages("rpart")
library(rpart)
fancyRpartPlot(model1$finalModel)
library(pgmm)
data(olive)
olive = olive[,-1]
inTrain <- createDataPartition(olive$Area,p=0.7,list=FALSE)
training <- olive[inTrain,]
testing <- olive[-inTrain,]
model1 <- train(Area~.,data=training,method="rpart")
model1$finalModel
newdata = as.data.frame(t(colMeans(olive)))
predict(model1,newdata)
View(olive)
library(ElemStatLearn)
data(SAheart)
set.seed(8484)
train = sample(1:dim(SAheart)[1],size=dim(SAheart)[1]/2,replace=F)
trainSA = SAheart[train,]
testSA = SAheart[-train,]
install.packages("ElemStatLearn")
library(ElemStatLearn)
data(SAheart)
set.seed(8484)
train = sample(1:dim(SAheart)[1],size=dim(SAheart)[1]/2,replace=F)
trainSA = SAheart[train,]
testSA = SAheart[-train,]
model1 <- train(chd~.,trainSA,method="binomial")
model1 <- glm(chd~.,trainSA,method="binomial")
model1 <- glm(chd~.,trainSA,family = ="binomial")
model1 <- glm(chd~.,trainSA,family  ="binomial")
set.seed(13234)
model1 <- glm(chd~.,trainSA,family  ="binomial")
model1 <- glm(chd~age+alcohol+obesity+tobacco+typea+ldl,trainSA,family  ="binomial")
prediction <- predict(model1,testSA)
missClass = function(testSA,prediction){sum(((prediction > 0.5)*1) != testSA)/length(testSA)}
missClass
missClass <- function(testSA,prediction){sum(((prediction > 0.5)*1) != testSA)/length(testSA)}
missClass
predict1 <- predict(model1,testSA)
missClass <- function(testSA,prediction){sum(((prediction > 0.5)*1) != testSA)/length(testSA)}
missClass(testSA,model1)
missClass <- function(values,prediction){sum(((prediction > 0.5)*1) != values)/length(values)}
missClass(testSA,model1)
missClass(testSA$chd,model1)
missClass(testSA$chd,model1$chd)
missClass(trainSA$chd,model1$chd)
model1 <- train(chd~age+alcohol+obesity+tobacco+typea+ldl,data=trainSA,method="glm",family="binomial")
missClass(trainSA$chd,model1$chd)
set.seed(13234)
model1 <- train(chd~age+alcohol+obesity+tobacco+typea+ldl,data=trainSA,method="glm",family="binomial")
missClass(testSA$chd,predict(model1,testSA))
missClass(trainSA$chd,predict(model1,trainSA))
library(ElemStatLearn)
data(vowel.train)
data(vowel.test)
set.seed(33833)
model2<- randomForest(y~.,vowel.train)
?randomForest
??randomFOrest
??randomForest
install.packages("randomForest")
library(randomForest)
model2 <- randomForest(y~.,data=vowel.train)
?varImp
varImp(model2)
vowel.train$y <- as.factor(vowel.train$y)
vowel.test$y <- as.factor(vowel.test$y)
model2 <- randomForest(y~.,data=vowel.train)
varImp(model2)
ord(varImp(model2),decreasing=TRUE
ord(varImp(model2),decreasing=TRUE
ord(varImp(model2),decreasing=TRUE)
order(varImp(model2),decreasing=TRUE)
library(ggplot2)
library(dplyr)
library(knitr)
library(caret)
library(leaps)
library(MASS)
library(glmnet)
pmltrain <- read.csv("pmltraining.csv")
pmltest <- read.csv("pmltesting.csv")
setwd("~/MachLearning")
pmltrain <- read.csv("pmltraining.csv")
pmltest <- read.csv("pmltesting.csv")
table(pmltrain2$new_window)
table(pmltrain$new_window)
406/19216
summary(pmltrain$classe)
featurePlot(x = pmltrain[, 3:7],
y = pmltrain$classe,
plot = "pairs",
type = c("p", "smooth"),
auto.key = list(columns = 5))
